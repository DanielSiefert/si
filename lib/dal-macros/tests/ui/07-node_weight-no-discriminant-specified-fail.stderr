error: No NodeWeightDiscriminants was specified.
  --> tests/ui/07-node_weight-no-discriminant-specified-fail.rs:11:1
   |
11 | / #[si_node_weight]
12 | | pub struct TestingNodeWeight {
13 | |     id: Ulid,
14 | |     lineage_id: Ulid,
15 | |     merkle_tree_hash: MerkleTreeHash,
16 | | }
   | |_^

error: unexpected end of input, expected identifier
  --> tests/ui/07-node_weight-no-discriminant-specified-fail.rs:10:10
   |
10 | #[derive(dal_macros::SiNodeWeight)]
   |          ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the derive macro `dal_macros::SiNodeWeight` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused imports: `NodeWeightDiscriminants`, `SiNodeWeight`
 --> tests/ui/07-node_weight-no-discriminant-specified-fail.rs:4:67
  |
4 |         traits::{CorrectExclusiveOutgoingEdge, CorrectTransforms, SiNodeWeight},
  |                                                                   ^^^^^^^^^^^^
5 |         NodeWeightDiscriminants,
  |         ^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `ContentHash`
 --> tests/ui/07-node_weight-no-discriminant-specified-fail.rs:8:63
  |
8 | use si_events::{merkle_tree_hash::MerkleTreeHash, ulid::Ulid, ContentHash};
  |                                                               ^^^^^^^^^^^

error[E0277]: the trait bound `TestingNodeWeight: SiVersionedNodeWeight` is not satisfied
  --> tests/ui/07-node_weight-no-discriminant-specified-fail.rs:19:6
   |
19 | impl CorrectExclusiveOutgoingEdge for TestingNodeWeight {
   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `SiVersionedNodeWeight` is not implemented for `TestingNodeWeight`, which is required by `for<'a> NodeInformation: From<&'a TestingNodeWeight>`
   |
   = help: the following other types implement trait `SiVersionedNodeWeight`:
             ManagementPrototypeNodeWeight
             dal::workspace_snapshot::node_weight::InputSocketNodeWeight
             dal::workspace_snapshot::node_weight::SchemaVariantNodeWeight
   = note: required for `TestingNodeWeight` to implement `SiNodeWeight`
   = note: required for `NodeInformation` to implement `for<'a> From<&'a TestingNodeWeight>`
note: required by a bound in `CorrectExclusiveOutgoingEdge`
  --> $WORKSPACE/lib/dal/src/workspace_snapshot/node_weight/traits/correct_exclusive_outgoing_edge.rs
   |
   | pub trait CorrectExclusiveOutgoingEdge
   |           ---------------------------- required by a bound in this trait
   | where
   |     NodeInformation: for<'a> From<&'a Self>,
   |                      ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `CorrectExclusiveOutgoingEdge`
