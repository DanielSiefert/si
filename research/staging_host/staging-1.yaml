variant: fcos
version: 1.4.0
storage:
  trees:
  files:
    - path: /etc/hostname
      contents:
        inline: staging-1
    - path: /usr/local/bin/docker-auth.sh
      mode: 0755
      contents:
        local: research/staging_host/scripts/docker-auth.sh
    - path: /usr/local/bin/load-keys.sh
      mode: 0755
      contents:
        local: research/staging_host/scripts/load-keys.sh
    - path: /opt/deploy/Makefile
      mode: 0755
      contents:
        local: deploy/Makefile
    - path: /opt/deploy/scripts/gateway.sh
      mode: 0755
      contents:
        local: deploy/scripts/gateway.sh
    - path: /opt/deploy/docker-compose.yml
      contents:
        local: deploy/docker-compose.yml
    - path: /opt/deploy/docker-compose.env-static.yml
      contents:
        local: deploy/docker-compose.env-static.yml
    - path: /opt/deploy/docker-compose.pganalyze.yml
      contents:
        local: deploy/docker-compose.pganalyze.yml
    - path: /opt/deploy/docker-compose.prod.yml
      contents:
        local: deploy/docker-compose.prod.yml
systemd:
  units:
    # installing aws-cli as a layered package with rpm-ostree
    - name: layer-awscli.service
      enabled: true
      contents: |
        [Unit]
        Description=Install AWS cli
        Wants=network-online.target
        After=network-online.target
        
        # We run before `zincati.service` to avoid conflicting rpm-ostree
        # transactions. - https://docs.fedoraproject.org/en-US/fedora-coreos/os-extensions/
        Before=zincati.service


        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/rpm-ostree install --apply-live --allow-inactive --idempotent awscli

        [Install]
        WantedBy=multi-user.target
    - name: layer-make.service
      enabled: true
      contents: |
        [Unit]
        Description=Install Make
        Wants=network-online.target
        After=network-online.target
        
        After=layer-awscli.service
        Before=zincati.service


        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/rpm-ostree install --apply-live --allow-inactive --idempotent make

        [Install]
        WantedBy=multi-user.target
    - name: layer-docker-compose.service
      enabled: true
      contents: |
        [Unit]
        Description=Install docker-compose
        Wants=network-online.target
        After=network-online.target
        
        After=layer-make.service
        Before=zincati.service


        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/bin/rpm-ostree install --apply-live --allow-inactive --idempotent docker-compose

        [Install]
        WantedBy=multi-user.target
    - name: docker-auth.service
      enabled: true
      contents: |
        [Unit]
        Description=Authenticate to container image repository
        After=layer-awscli.service
        Requires=layer-awscli.service
        
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        TimeoutStartSec=30s
        ExecStart=/usr/local/bin/docker-auth.sh

        [Install]
        WantedBy=multi-user.target
    - name: load-keys.service
      enabled: true
      contents: |
        [Unit]
        Description=Set
        After=layer-awscli.service
        Requires=layer-awscli.service
        
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        TimeoutStartSec=30s
        ExecStart=/usr/local/bin/load-keys.sh

        [Install]
        WantedBy=multi-user.target
    - name: deployment.service
      enabled: true
      contents: |
        [Unit]
        Description=System Initiative Deployment
        After=network-online.target
        Wants=network-online.target

        After=layer-make.service
        Requires=layer-make.service
        After=layer-docker-compose.service
        Requires=layer-docker-compose.service

        After=docker-auth.service
        Requires=docker-auth.service
        After=load-keys.service
        Requires=load-keys.service

        [Service]
        TimeoutStartSec=60s
        WorkingDirectory=/opt/deploy
        ExecStart=make prod-service

        [Install]
        WantedBy=multi-user.target
#    - name: watchtower.service
#      enabled: true
#      contents: |
#        [Unit]
#        After=network-online.target
#        Wants=network-online.target
#
#        After=deployment.service
#        Requires=deployment.service
#
#
#        [Service]
#         ExecStartPre=-/usr/bin/docker kill whiskers1
#         ExecStartPre=-/usr/bin/docker rm whiskers1
#         ExecStart=/usr/bin/docker run --name watchtower \
#           -v /var/run/docker.sock:/var/run/docker.sock docker.io/containrrr/watchtower \
#           -v /root/.docker/config.json:/config.json \
#           --interval 30 --label-enable \
#           containrrr/watchtower
#
#        [Install]
#        WantedBy=multi-user.target

