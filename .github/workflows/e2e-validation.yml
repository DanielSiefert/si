name: Cypress E2E Tests

on:
#  schedule:
#    - cron: '*/5 * * * *'  # Runs every 5 minutes
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: "where to deploy"
        default: "tools"
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        description: "where to deploy"
        default: "tools"
        options:
          - tools
          - production

jobs:
  cypress-tests:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    strategy:
      # don't fail the entire matrix on failure
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1] # , 2, 3, 4, 5, 6, 7, 8, 9, 10] - temp disabled mass
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.18.2'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
            version: 8.10.5

      - name: Install Cypress
        working-directory: app/web
        run: |
          pnpm i
          pnpm install cypress

      - name: install uuid
        run: |
          sudo apt update
          sudo apt install uuid -y

      - uses: nick-fields/retry@v2
        with:
          max_attempts: 3
          timeout_minutes: 20
          command: |
            cd app/web
            export VITE_AUTH0_USERNAME=${{ secrets.VITE_AUTH0_USERNAME }}
            export VITE_AUTH0_PASSWORD=${{ secrets.VITE_AUTH0_PASSWORD }}
            export VITE_SI_CYPRESS_MULTIPLIER=${{ vars.VITE_SI_CYPRESS_MULTIPLIER }}
            export VITE_SI_WORKSPACE_URL=${{ vars.VITE_SI_WORKSPACE_URL }}
            export VITE_HOST_URL=${{ vars.VITE_SI_WORKSPACE_URL }}
            export VITE_SI_WORKSPACE_ID=${{ vars.VITE_SI_WORKSPACE_ID }}
            export VITE_UUID=$(uuid)
            export VITE_AUTH_API_URL=https://auth-api.systeminit.com
            export VITE_AUTH_PORTAL_URL=https://auth.systeminit.com

            npx cypress run --spec "cypress/e2e/**" --parallel --record --key ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: 'Upload Cypress Recordings to Github'
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-recordings-run-${{ matrix.containers }}
          path: app/web/cypress/videos/**/*.mp4
          retention-days: 5

      - name: Send Slack Failure Webhook
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{\"text\": \":si: Failed Cypress E2E Test for ${{ inputs.environment }}: <https://github.com/systeminit/si/actions/runs/$GITHUB_RUN_ID|:test_tube: Link>\"}" ${{ secrets.SLACK_WEBHOOK_URL }}
