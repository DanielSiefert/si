name: Deploy Services

run-name: Deploy to ${{ inputs.environment }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        description: "where to deploy"
        default: "tools"
        options:
          - tools
          - production
      service:
        type: choice
        required: true
        description: "service to deploy"
        options:
          - all
          - pinga
          - rebaser
          - sdf
          - veritech
          - web
      version:
        type: string
        required: true
        description: "version to deploy"
        default: "stable"

jobs:
  invalidate-cache:
    uses: ./.github/workflows/invalidate-cache.yml
    with:
      environment: shared
    secrets:
      access_key: ${{ secrets.AWS_SHARED_PROD_ACCESS_KEY }}
      secret_key: ${{ secrets.AWS_SHARED_PROD_SECRET_KEY }}

  secrets:
    needs: invalidate-cache
    runs-on: ubuntu-latest
    outputs:
      aws_access_key: ${{ steps.prepare.outputs.aws_access_key }}
      aws_secret_key: ${{ steps.prepare.outputs.aws_secret_key }}
    steps:
      - name: prepare
        id: prepare
        run: |
          echo "aws_access_key=aws_${{ github.event.inputs.environment }}_access_key" >> "$GITHUB_OUTPUT"
          echo "aws_secret_key=aws_${{ github.event.inputs.environment }}_secret_key" >> "$GITHUB_OUTPUT"

  deploy-service:
    needs: secrets
    if: ${{ github.event.inputs.service != 'all' }}
    uses: ./.github/workflows/deploy-service.yml
    with:
      environment: ${{ github.event.inputs.environment }}
      service: ${{ github.event.inputs.service }}
      version: ${{ github.event.inputs.version }}
    secrets:
      access_key: ${{ secrets[needs.secrets.outputs.aws_access_key] }}
      secret_key: ${{ secrets[needs.secrets.outputs.aws_secret_key] }}

  deploy-services:
    needs: secrets
    if: ${{ github.event.inputs.service == 'all' }}
    strategy:
     fail-fast: false
     matrix:
      service: ["pinga", "rebaser", "sdf", "veritech", "web"]
    uses: ./.github/workflows/deploy-service.yml
    with:
      environment: ${{ github.event.inputs.environment }}
      service: ${{ matrix.service }}
      version: ${{ github.event.inputs.version }}
    secrets:
      access_key: ${{ secrets[needs.secrets.outputs.aws_access_key] }}
      secret_key: ${{ secrets[needs.secrets.outputs.aws_secret_key] }}

  set-init:
    needs: secrets
    uses: ./.github/workflows/set-init-version.yml
    with:
      environment: ${{ github.event.inputs.environment }}
      service: ${{ github.event.inputs.service }}
      version: ${{ github.event.inputs.version }}
    secrets:
      access_key: ${{ secrets[needs.secrets.outputs.aws_access_key] }}
      secret_key: ${{ secrets[needs.secrets.outputs.aws_secret_key] }}
