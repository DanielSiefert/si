name: API Test

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: "where to test"
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        description: "where to test"
        default: "tools"
        options:
          - tools
          - production
  repository_dispatch:
    types:
      - webhook

jobs:
  define-test-matrix:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.tests.outputs.tests }}
    steps:
      - uses: actions/checkout@v4
      - id: tests
        working-directory: bin/si-api-test/tests
        run: |
          # Find .ts files, remove ./ prefix, and format as JSON array
          files=$(find "." -mindepth 1 -maxdepth 1 -type f -name "*.ts" | sed -r "s/\.\/(.*)\.ts/\1/" | jq -R -s 'split("\n") | map(select(length > 0))')
          test_output=$(echo "$files" | jq -c '.')
          echo "tests=$test_output" >> "$GITHUB_OUTPUT"
          echo "$test_output"

  api-test:
    name: API Test SDF
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    needs: define-test-matrix
    strategy:
      fail-fast: false
      matrix:
        tests: ${{ fromJSON(needs.define-test-matrix.outputs.tests) }}

    env:
      SDF_API_URL: ${{ vars.SDF_API_URL }}
      AUTH_API_URL: ${{ vars.AUTH_API_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Run the deno exec
        run: |
          cd bin/si-api-test
          echo ${{ github.ref }}
          deno task run \
          --workspaceId ${{ vars.API_TEST_WORKSPACE_ID }} \
          --userId ${{ secrets.API_TEST_EMAIL }} \
          --password ${{ secrets.API_TEST_PASSWORD }} \
          --tests ${{ matrix.tests }}

  retry:
    runs-on: ubuntu-latest
    needs: api-test
    if: failure() && github.run_attempt < 3
    steps:
      - name: Retry API Tests
        run: echo "Retry attempt ${{ github.run_attempt }}/3"
  
  on-failure:
    runs-on: ubuntu-latest
    needs: api-test
    if: ${{ failure() && github.ref == 'refs/heads/main' && github.run_attempt == 3 }}
    steps:
      - run: |
            curl --location "${{ secrets.FIREHYDRANT_WEBHOOK_URL }}" \
            --header "Content-Type: application/json" \
            --data "{
              \"summary\": \"API ${{ inputs.environment }} Tests Fail\",
              \"body\": \"API Tests have failed for ${{ inputs.environment }}.\",
              \"links\": [
                {
                  \"href\": \"https://github.com/systeminit/si/actions/runs/$GITHUB_RUN_ID\",
                  \"text\": \"E2E Test Run ${{ inputs.environment }}\"
                }
              ],
              \"tags\": [
                \"service:github\"
              ]
            }"
      - run: |
          curl -X POST \
            -H 'Content-type: application/json' \
            --data "{\"text\": \":si: Failed API Tests for ${{ inputs.environment }}: <https://github.com/systeminit/si/actions/runs/$GITHUB_RUN_ID|:test_tube: Link>\"}" \
            ${{ secrets.SLACK_WEBHOOK_URL }}
