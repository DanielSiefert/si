name: release-veritech

on:
  push:
    branches:
      - staging
      - trying
    paths:
      - .github/workflows/release-veritech.yml
      - .cargo/**
      - Cargo.*
      - bin/veritech/**
      - lib/config-file/**
      - lib/cyclone/**
      - lib/si-data/**
      - lib/si-settings/**
      - lib/telemetry-rs/**
      - lib/veritech/**
      - rust-toolchain
      - rustfmt.toml

jobs:
  release:
    name: Release Veritech
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # pin@v2.3.4
      - id: buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # pin@v1.6.0
      - id: login
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 # pin@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - id: release
        name: make ${{ github.workflow }}
        run: |
          : make ${{ github.workflow }}
          echo "::group::Building and publishing image"
          make ${{ github.workflow }}
          echo "::endgroup::"
          echo "::group::Manifest info"
          jq . <tmp/${{ github.workflow}}.manifest.json
          echo "::endgroup::"
          echo "::set-output name=manifest::$(
            cat tmp/${{ github.workflow}}.manifest.json
          )"
      - name: report
        if: success()
        run: |
          : report
          echo 'DockerHub URL: ${{ fromJSON(steps.release.outputs.manifest).image_url }}'
          echo 'GitHub Commit URL: ${{ fromJSON(steps.release.outputs.manifest).commit_url }}'
